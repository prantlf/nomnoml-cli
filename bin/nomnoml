#!/usr/bin/env node

const commander = require('commander');
const generateDiagram = require('../lib/generate');
const { version } = require('../package.json');

commander
  .version(version)
  .description('  Generates images from nomnoml diagram sources')
  .usage('[option]')
  .option('-i, --input <path>', 'file with nomnoml source to read from')
  .option('-o, --output <path>', 'file for the image output to write to')
  .option('-f, --format <format>', 'output format (png, jpg, svg, pdf)')
  .option('-w, --width <pixels>', 'width of the canvas to draw on', parseInt)
  .option('-H, --height <pixels>', 'height of the canvas to draw on', parseInt)
  .on('--help', function () {
    console.log('  The default output format is png. The default canvas size is 640x480 pixels.');
    console.log('  If the input file is omitted, the source is read from the standard input.');
    console.log('  If the output file is omitted, the image is written to the standard output.');
    console.log();
    console.log('  Examples:');
    console.log();
    console.log('    $ echo \'[nomnoml]is->[awesome]\' | nomnoml > awesome.png');
    console.log('    $ nomnoml -i source.nomnoml -f svg -o target.svg');
  })
  .parse(process.argv);

const options = commander.opts();
if (options.input) {
  options.inputFile = options.input;
  delete options.input;
} else {
  options.input = process.stdin;
}
if (!options.output) {
  options.output = process.stdout;
}

generateDiagram(options)
  .catch(error => {
    console.error(error.message);
    process.exitCode = 1;
  });
